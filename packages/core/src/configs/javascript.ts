import type { FlatConfigItem } from '../types'
import globals from 'globals'

export const javascript = (): FlatConfigItem[] => {
  return [
    {
      name: 'witheslint:javascript:configs',
      languageOptions: {
        ecmaVersion: 'latest',
        globals: {
          ...globals.browser,
          ...globals.es2021,
          ...globals.node,
          document: 'readonly',
          navigator: 'readonly',
          window: 'readonly',
        },
        parserOptions: {
          ecmaFeatures: {
            jsx: true,
          },
          sourceType: 'module',
        },
        sourceType: 'module',
      },
      linterOptions: {
        reportUnusedDisableDirectives: true,
      },
      rules: {
        'accessor-pairs': ['error', { getWithoutSet: false, setWithoutGet: true, enforceForClassMembers: true }],
        'array-callback-return': 'error',
        'arrow-body-style': 'off',
        'block-scoped-var': 'error',
        'capitalized-comments': 'off',
        'class-methods-use-this': 'off',
        'complexity': ['error', { max: 20 }],
        'consistent-return': 'off',
        'consistent-this': 'off',
        'constructor-super': 'error',
        'default-case': 'off',
        'default-case-last': 'error',
        'default-param-last': 'off',
        'dot-notation': 'off',
        'eqeqeq': ['error', 'always'],
        'for-direction': 'error',
        'func-name-matching': ['error', 'always', { includeCommonJSModuleExports: false }],
        'func-names': 'off',
        'func-style': 'off',
        'getter-return': 'error',
        'grouped-accessor-pairs': 'error',
        'id-denylist': 'off',
        'id-length': 'off',
        'id-match': 'off',
        'init-declarations': 'off',
        'line-comment-position': 'off',
        'logical-assignment-operators': 'off',
        'max-classes-per-file': 'off',
        'max-depth': ['error', { max: 5 }],
        'max-lines': 'off',
        'max-lines-per-function': 'off',
        'max-nested-callbacks': ['error', 3],
        'max-params': ['error', 3],
        'max-statements': 'off',
        'multiline-comment-style': 'off',
        'new-cap': ['error', { capIsNew: false, newIsCap: true, properties: true }],
        'no-alert': 'warn',
        'no-array-constructor': 'error',
        'no-async-promise-executor': 'error',
        'no-await-in-loop': 'off',
        'no-bitwise': 'off',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-class-assign': 'error',
        'no-compare-neg-zero': 'error',
        'no-cond-assign': ['error', 'except-parens'],
        'no-console': 'warn',
        'no-const-assign': 'error',
        'no-constant-binary-expression': 'error',
        'no-constant-condition': ['error', { checkLoops: false }],
        'no-constructor-return': 'error',
        'no-continue': 'off',
        'no-control-regex': 'off',
        'no-debugger': 'error',
        'no-delete-var': 'error',
        'no-div-regex': 'off',
        'no-dupe-args': 'error',
        'no-dupe-class-members': 'error',
        'no-dupe-else-if': 'error',
        'no-dupe-keys': 'error',
        'no-duplicate-case': 'error',
        'no-duplicate-imports': 'off',
        'no-else-return': 'off',
        'no-empty': ['error', { allowEmptyCatch: true }],
        'no-empty-character-class': 'error',
        'no-empty-function': 'off',
        'no-empty-pattern': 'error',
        'no-empty-static-block': 'off',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-ex-assign': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-boolean-cast': 'error',
        'no-extra-label': 'off',
        'no-fallthrough': 'error',
        'no-func-assign': 'error',
        'no-global-assign': 'error',
        'no-implicit-coercion': ['error', { allow: ['!!'] }],
        'no-implicit-globals': 'off',
        'no-implied-eval': 'error',
        'no-import-assign': 'error',
        'no-inline-comments': 'off',
        'no-inner-declarations': ['error', 'both'],
        'no-invalid-regexp': 'error',
        'no-invalid-this': 'error',
        'no-irregular-whitespace': ['error', { skipComments: false, skipRegExps: true, skipStrings: true, skipTemplates: true }],
        'no-iterator': 'error',
        'no-label-var': 'off',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-lonely-if': 'off',
        'no-loop-func': 'off',
        'no-loss-of-precision': 'error',
        'no-magic-numbers': 'off',
        'no-misleading-character-class': 'error',
        'no-multi-assign': 'off',
        'no-multi-str': 'error',
        'no-negated-condition': 'off',
        'no-nested-ternary': 'off',
        'no-new': 'error',
        'no-new-func': 'error',
        'no-new-native-nonconstructor': 'error',
        'no-new-symbol': 'error',
        'no-new-wrappers': 'error',
        'no-nonoctal-decimal-escape': 'error',
        'no-obj-calls': 'error',
        'no-octal': 'error',
        'no-param-reassign': 'error',
        'no-plusplus': 'off',
        'no-promise-executor-return': 'error',
        'no-proto': 'error',
        'no-prototype-builtins': 'error',
        'no-redeclare': 'error',
        'no-regex-spaces': 'error',
        'no-restricted-exports': 'off',
        'no-restricted-globals': 'off',
        'no-restricted-imports': 'off',
        'no-restricted-properties': 'off',
        'no-restricted-syntax': [
          'error',
          'DebuggerStatement', 'LabeledStatement', 'WithStatement', 'TSEnumDeclaration[const=true]', 'TSExportAssignment',
        ],
        'no-return-assign': ['error', 'always'],
        'no-script-url': 'off',
        'no-self-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-setter-return': 'error',
        'no-shadow': 'off',
        'no-shadow-restricted-names': 'error',
        'no-sparse-arrays': 'error',
        'no-template-curly-in-string': 'error',
        'no-ternary': 'off',
        'no-this-before-super': 'error',
        'no-throw-literal': 'error',
        'no-undef': 'error',
        'no-undef-init': 'error',
        'no-undefined': 'off',
        'no-underscore-dangle': 'off',
        'no-unexpected-multiline': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-unneeded-ternary': 'off',
        'no-unreachable': 'error',
        'no-unreachable-loop': 'error',
        'no-unsafe-finally': 'error',
        'no-unsafe-negation': 'error',
        'no-unsafe-optional-chaining': 'error',
        'no-unused-expressions': ['error', { allowShortCircuit: true, allowTaggedTemplates: true, allowTernary: true }],
        'no-unused-labels': 'error',
        'no-unused-private-class-members': 'error',
        'no-unused-vars': 'off',
        'no-use-before-define': ['error', { classes: false, functions: false, variables: false }],
        'no-useless-backreference': 'error',
        'no-useless-call': 'error',
        'no-useless-catch': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-concat': 'error',
        'no-useless-constructor': 'error',
        'no-useless-escape': 'error',
        'no-useless-rename': 'error',
        'no-useless-return': 'off',
        'no-var': 'error',
        'no-warning-comments': 'off',
        'no-with': 'error',
        'object-shorthand': ['error', 'always', { avoidQuotes: true, ignoreConstructors: false }],
        'one-var': ['error', 'never'],
        'operator-assignment': 'off',
        'prefer-arrow-callback': ['error', { allowNamedFunctions: false, allowUnboundThis: true }],
        'prefer-const': ['warn', { destructuring: 'all', ignoreReadBeforeAssign: true }],
        'prefer-destructuring': 'off',
        'prefer-exponentiation-operator': 'off',
        'prefer-named-capture-group': 'off',
        'prefer-numeric-literals': 'off',
        'prefer-object-has-own': 'off',
        'prefer-object-spread': 'error',
        'prefer-promise-reject-errors': 'error',
        'prefer-regex-literals': 'error',
        'prefer-rest-params': 'error',
        'prefer-spread': 'error',
        'prefer-template': 'error',
        'radix': 'error',
        'require-atomic-updates': 'off',
        'require-await': 'error',
        'require-unicode-regexp': 'off',
        'require-yield': 'error',
        'sort-keys': 'off',
        'sort-vars': 'off',
        'strict': ['error', 'never'],
        'symbol-description': 'error',
        'use-isnan': ['error', { enforceForIndexOf: true, enforceForSwitchCase: true }],
        'valid-typeof': ['error', { requireStringLiterals: true }],
        'vars-on-top': 'off',
        'yoda': ['error', 'never', { onlyEquality: true }],
      },
    },
  ]
}
